SV-Bay: structural variant detection in cancer genomes using a Bayesian approach with correction for GC-content and read mappability

All sources are stored in the "src" folder.
Folder "data" contains input data to test the SV-Bay code.

SV-Bay is written in Python with small insertions in C++ code. 
To run the code on the expected time, we suggest to use Python 2.7 (difference with 2.6 is more then 3 times). The following libraries should be installed:
 
yaml
joblib
scipy
scipy
numpy
matplotlib
pysam

SV-Bay works both in Mac OS and Linux.

SV-Bay contains 3 main steps.

1)Main clustering. On this step SV-Bay calculates all the statistics about fragment length distribution and clusters abnormal fragments.

python -B main_clustering.py -c config/config.yaml

2)Main probability. On this step SV-Bay calculates probability for each cluster to associate it with noise or real SV.

python -B main_probability.py -c config/config.yaml

3)Assembling. On this step SV-Bay assembles clusters to complex and simple SVs. And outputs final results.

python -B main_assemly_links.py -c config/config.yaml > results

Assemling step can also exclude all germline mutations, if the data is provided.

To exclude normal reads:	run SV-Bay with normal reads, run assembly step with flag -n and name of the folder with germ-line clusters.

python -B main_clustering.py -c config/config_germ.yaml

python -B main_assemly_links.py -c config/config.yaml -n 'cluster_files_germ/' > results


The same config file should be used for each step. Config example is available in config/config.yaml.
